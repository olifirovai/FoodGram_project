# Generated by Django 3.1.3 on 2020-12-09 21:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FavoriteRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Favorite Recipe',
                'verbose_name_plural': 'Favorite Recipes',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="recipe's name")),
                ('directions', models.TextField()),
                ('post_date', models.DateTimeField(auto_now=True, db_index=True, verbose_name='publishing date')),
                ('cook_time', models.IntegerField(default=10, help_text='Add cook time in minutes', validators=[django.core.validators.MinValueValidator(1)], verbose_name='cook time')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='recipe/', verbose_name='picture of the recipe')),
                ('slug', models.SlugField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ['-post_date'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=10, help_text='Add needed weight for the recipe', validators=[django.core.validators.MinValueValidator(1)], verbose_name='ingredient weight')),
            ],
            options={
                'verbose_name': 'Recipe Ingredient',
                'verbose_name_plural': 'Recipes Ingredients',
                'ordering': ['recipe'],
            },
        ),
        migrations.CreateModel(
            name='RecipeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner')], max_length=25)),
                ('color', models.CharField(default='', editable=False, max_length=10)),
            ],
            options={
                'verbose_name': 'Recipe type',
                'verbose_name_plural': 'Recipe types',
                'ordering': ['type_name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeTypeMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Recipe type mapping',
                'verbose_name_plural': 'Recipes types mapping',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to='recipe.recipe')),
            ],
            options={
                'verbose_name': 'Shopping List',
                'verbose_name_plural': 'Shopping Lists',
                'ordering': ['recipe'],
            },
        ),
    ]
